/******************************************************************************
* Copyright (C) 2009 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.23                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>
#include <stdlib.h>

#include "CPfCompetitionsBySeason.h"

CPfCompetitionsBySeason::CPfCompetitionsBySeason()
{
    m_XFkSeason = "0";
    m_XCompetitionBySeason = "0";
    m_DEndCompetition = "";
    m_XFkCompetition = "0";
    m_DBeginCompetition = "";
}

CPfCompetitionsBySeason::CPfCompetitionsBySeason(const CPfCompetitionsBySeason &obj)
{
    m_XFkSeason = obj.m_XFkSeason;
    m_XCompetitionBySeason = obj.m_XCompetitionBySeason;
    m_DEndCompetition = obj.m_DEndCompetition;
    m_XFkCompetition = obj.m_XFkCompetition;
    m_DBeginCompetition = obj.m_DBeginCompetition;
}

CPfCompetitionsBySeason::~CPfCompetitionsBySeason()
{
}

int CPfCompetitionsBySeason::getXFkSeason() const
{
    if( m_XFkSeason=="" ){
        return 0;
    }else{
        return atoi(m_XFkSeason.c_str());
    }
}

const std::string& CPfCompetitionsBySeason::getXFkSeason_str() const
{
    return m_XFkSeason;
}

int CPfCompetitionsBySeason::getXCompetitionBySeason() const
{
    if( m_XCompetitionBySeason=="" ){
        return 0;
    }else{
        return atoi(m_XCompetitionBySeason.c_str());
    }
}

const std::string& CPfCompetitionsBySeason::getXCompetitionBySeason_str() const
{
    return m_XCompetitionBySeason;
}

CDate CPfCompetitionsBySeason::getDEndCompetition() const
{
    return m_DEndCompetition;
}

const std::string& CPfCompetitionsBySeason::getDEndCompetition_str() const
{
    return m_DEndCompetition;
}

int CPfCompetitionsBySeason::getXFkCompetition() const
{
    if( m_XFkCompetition=="" ){
        return 0;
    }else{
        return atoi(m_XFkCompetition.c_str());
    }
}

const std::string& CPfCompetitionsBySeason::getXFkCompetition_str() const
{
    return m_XFkCompetition;
}

CDate CPfCompetitionsBySeason::getDBeginCompetition() const
{
    return m_DBeginCompetition;
}

const std::string& CPfCompetitionsBySeason::getDBeginCompetition_str() const
{
    return m_DBeginCompetition;
}

void CPfCompetitionsBySeason::setXFkSeason(int XFkSeason)
{
    std::ostringstream stream;
    stream << XFkSeason;
    m_XFkSeason = stream.str();
}

void CPfCompetitionsBySeason::setXFkSeason_str(const std::string &XFkSeason)
{
    m_XFkSeason = XFkSeason;
}

void CPfCompetitionsBySeason::setXCompetitionBySeason(int XCompetitionBySeason)
{
    std::ostringstream stream;
    stream << XCompetitionBySeason;
    m_XCompetitionBySeason = stream.str();
}

void CPfCompetitionsBySeason::setXCompetitionBySeason_str(const std::string &XCompetitionBySeason)
{
    m_XCompetitionBySeason = XCompetitionBySeason;
}

void CPfCompetitionsBySeason::setDEndCompetition(const CDate &DEndCompetition)
{
    m_DEndCompetition = DEndCompetition.getTimestamp();
}

void CPfCompetitionsBySeason::setDEndCompetition_str(const std::string &DEndCompetition)
{
    m_DEndCompetition = DEndCompetition;
}

void CPfCompetitionsBySeason::setXFkCompetition(int XFkCompetition)
{
    std::ostringstream stream;
    stream << XFkCompetition;
    m_XFkCompetition = stream.str();
}

void CPfCompetitionsBySeason::setXFkCompetition_str(const std::string &XFkCompetition)
{
    m_XFkCompetition = XFkCompetition;
}

void CPfCompetitionsBySeason::setDBeginCompetition(const CDate &DBeginCompetition)
{
    m_DBeginCompetition = DBeginCompetition.getTimestamp();
}

void CPfCompetitionsBySeason::setDBeginCompetition_str(const std::string &DBeginCompetition)
{
    m_DBeginCompetition = DBeginCompetition;
}

