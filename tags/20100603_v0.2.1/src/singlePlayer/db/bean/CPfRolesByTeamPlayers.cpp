/******************************************************************************
* Copyright (C) 2009 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.23                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>
#include <stdlib.h>

#include "CPfRolesByTeamPlayers.h"

CPfRolesByTeamPlayers::CPfRolesByTeamPlayers()
{
    m_XRoleByTeamPlayer = "0";
    m_XFkTeamPlayer = "0";
    m_NSkill = "0";
    m_XFkRole = "0";
}

CPfRolesByTeamPlayers::CPfRolesByTeamPlayers(const CPfRolesByTeamPlayers &obj)
{
    m_XRoleByTeamPlayer = obj.m_XRoleByTeamPlayer;
    m_XFkTeamPlayer = obj.m_XFkTeamPlayer;
    m_NSkill = obj.m_NSkill;
    m_XFkRole = obj.m_XFkRole;
}

CPfRolesByTeamPlayers::~CPfRolesByTeamPlayers()
{
}

int CPfRolesByTeamPlayers::getXRoleByTeamPlayer() const
{
    if( m_XRoleByTeamPlayer=="" ){
        return 0;
    }else{
        return atoi(m_XRoleByTeamPlayer.c_str());
    }
}

const std::string& CPfRolesByTeamPlayers::getXRoleByTeamPlayer_str() const
{
    return m_XRoleByTeamPlayer;
}

int CPfRolesByTeamPlayers::getXFkTeamPlayer() const
{
    if( m_XFkTeamPlayer=="" ){
        return 0;
    }else{
        return atoi(m_XFkTeamPlayer.c_str());
    }
}

const std::string& CPfRolesByTeamPlayers::getXFkTeamPlayer_str() const
{
    return m_XFkTeamPlayer;
}

int CPfRolesByTeamPlayers::getNSkill() const
{
    if( m_NSkill=="" ){
        return 0;
    }else{
        return atoi(m_NSkill.c_str());
    }
}

const std::string& CPfRolesByTeamPlayers::getNSkill_str() const
{
    return m_NSkill;
}

int CPfRolesByTeamPlayers::getXFkRole() const
{
    if( m_XFkRole=="" ){
        return 0;
    }else{
        return atoi(m_XFkRole.c_str());
    }
}

const std::string& CPfRolesByTeamPlayers::getXFkRole_str() const
{
    return m_XFkRole;
}

void CPfRolesByTeamPlayers::setXRoleByTeamPlayer(int XRoleByTeamPlayer)
{
    std::ostringstream stream;
    stream << XRoleByTeamPlayer;
    m_XRoleByTeamPlayer = stream.str();
}

void CPfRolesByTeamPlayers::setXRoleByTeamPlayer_str(const std::string &XRoleByTeamPlayer)
{
    m_XRoleByTeamPlayer = XRoleByTeamPlayer;
}

void CPfRolesByTeamPlayers::setXFkTeamPlayer(int XFkTeamPlayer)
{
    std::ostringstream stream;
    stream << XFkTeamPlayer;
    m_XFkTeamPlayer = stream.str();
}

void CPfRolesByTeamPlayers::setXFkTeamPlayer_str(const std::string &XFkTeamPlayer)
{
    m_XFkTeamPlayer = XFkTeamPlayer;
}

void CPfRolesByTeamPlayers::setNSkill(int NSkill)
{
    std::ostringstream stream;
    stream << NSkill;
    m_NSkill = stream.str();
}

void CPfRolesByTeamPlayers::setNSkill_str(const std::string &NSkill)
{
    m_NSkill = NSkill;
}

void CPfRolesByTeamPlayers::setXFkRole(int XFkRole)
{
    std::ostringstream stream;
    stream << XFkRole;
    m_XFkRole = stream.str();
}

void CPfRolesByTeamPlayers::setXFkRole_str(const std::string &XFkRole)
{
    m_XFkRole = XFkRole;
}

