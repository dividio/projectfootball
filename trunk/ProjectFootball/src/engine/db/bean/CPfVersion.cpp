/******************************************************************************
* Copyright (C) 2008 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.20                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>
#include <stdlib.h>

#include "CPfVersion.h"

CPfVersion::CPfVersion()
{
    m_DDate = "";
    m_SVersion = "";
    m_XVersion = "0";
}

CPfVersion::CPfVersion(const CPfVersion &obj)
{
    m_DDate = obj.m_DDate;
    m_SVersion = obj.m_SVersion;
    m_XVersion = obj.m_XVersion;
}

CPfVersion::~CPfVersion()
{
}

CDate CPfVersion::getDDate() const
{
    return m_DDate;
}

const std::string& CPfVersion::getDDate_str() const
{
    return m_DDate;
}

const std::string& CPfVersion::getSVersion() const
{
    return m_SVersion;
}

const std::string& CPfVersion::getSVersion_str() const
{
    return m_SVersion;
}

int CPfVersion::getXVersion() const
{
    if( m_XVersion=="" ){
        return 0;
    }else{
        return atoi(m_XVersion.c_str());
    }
}

const std::string& CPfVersion::getXVersion_str() const
{
    return m_XVersion;
}

void CPfVersion::setDDate(const CDate &DDate)
{
    m_DDate = DDate.getTimestamp();
}

void CPfVersion::setDDate_str(const std::string &DDate)
{
    m_DDate = DDate;
}

void CPfVersion::setSVersion(const std::string &SVersion)
{
    m_SVersion = SVersion;
}

void CPfVersion::setSVersion_str(const std::string &SVersion)
{
    m_SVersion = SVersion;
}

void CPfVersion::setXVersion(int XVersion)
{
    std::ostringstream stream;
    stream << XVersion;
    m_XVersion = stream.str();
}

void CPfVersion::setXVersion_str(const std::string &XVersion)
{
    m_XVersion = XVersion;
}

