/******************************************************************************
* Copyright (C) 2010 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.23                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>
#include <stdlib.h>

#include "CPfCompetitionPhasesBySeason.h"

CPfCompetitionPhasesBySeason::CPfCompetitionPhasesBySeason()
{
    m_XFkCompetitionPhase = "0";
    m_XCompetitionPhaseBySeason = "0";
    m_DEndCompetitionPhase = "";
    m_DBeginCompetitionPhase = "";
    m_XFkSeason = "0";
}

CPfCompetitionPhasesBySeason::CPfCompetitionPhasesBySeason(const CPfCompetitionPhasesBySeason &obj)
{
    m_XFkCompetitionPhase = obj.m_XFkCompetitionPhase;
    m_XCompetitionPhaseBySeason = obj.m_XCompetitionPhaseBySeason;
    m_DEndCompetitionPhase = obj.m_DEndCompetitionPhase;
    m_DBeginCompetitionPhase = obj.m_DBeginCompetitionPhase;
    m_XFkSeason = obj.m_XFkSeason;
}

CPfCompetitionPhasesBySeason::~CPfCompetitionPhasesBySeason()
{
}

int CPfCompetitionPhasesBySeason::getXFkCompetitionPhase() const
{
    if( m_XFkCompetitionPhase=="" ){
        return 0;
    }else{
        return atoi(m_XFkCompetitionPhase.c_str());
    }
}

const std::string& CPfCompetitionPhasesBySeason::getXFkCompetitionPhase_str() const
{
    return m_XFkCompetitionPhase;
}

int CPfCompetitionPhasesBySeason::getXCompetitionPhaseBySeason() const
{
    if( m_XCompetitionPhaseBySeason=="" ){
        return 0;
    }else{
        return atoi(m_XCompetitionPhaseBySeason.c_str());
    }
}

const std::string& CPfCompetitionPhasesBySeason::getXCompetitionPhaseBySeason_str() const
{
    return m_XCompetitionPhaseBySeason;
}

CDate CPfCompetitionPhasesBySeason::getDEndCompetitionPhase() const
{
    return m_DEndCompetitionPhase;
}

const std::string& CPfCompetitionPhasesBySeason::getDEndCompetitionPhase_str() const
{
    return m_DEndCompetitionPhase;
}

CDate CPfCompetitionPhasesBySeason::getDBeginCompetitionPhase() const
{
    return m_DBeginCompetitionPhase;
}

const std::string& CPfCompetitionPhasesBySeason::getDBeginCompetitionPhase_str() const
{
    return m_DBeginCompetitionPhase;
}

int CPfCompetitionPhasesBySeason::getXFkSeason() const
{
    if( m_XFkSeason=="" ){
        return 0;
    }else{
        return atoi(m_XFkSeason.c_str());
    }
}

const std::string& CPfCompetitionPhasesBySeason::getXFkSeason_str() const
{
    return m_XFkSeason;
}

void CPfCompetitionPhasesBySeason::setXFkCompetitionPhase(int XFkCompetitionPhase)
{
    std::ostringstream stream;
    stream << XFkCompetitionPhase;
    m_XFkCompetitionPhase = stream.str();
}

void CPfCompetitionPhasesBySeason::setXFkCompetitionPhase_str(const std::string &XFkCompetitionPhase)
{
    m_XFkCompetitionPhase = XFkCompetitionPhase;
}

void CPfCompetitionPhasesBySeason::setXCompetitionPhaseBySeason(int XCompetitionPhaseBySeason)
{
    std::ostringstream stream;
    stream << XCompetitionPhaseBySeason;
    m_XCompetitionPhaseBySeason = stream.str();
}

void CPfCompetitionPhasesBySeason::setXCompetitionPhaseBySeason_str(const std::string &XCompetitionPhaseBySeason)
{
    m_XCompetitionPhaseBySeason = XCompetitionPhaseBySeason;
}

void CPfCompetitionPhasesBySeason::setDEndCompetitionPhase(const CDate &DEndCompetitionPhase)
{
    m_DEndCompetitionPhase = DEndCompetitionPhase.getTimestamp();
}

void CPfCompetitionPhasesBySeason::setDEndCompetitionPhase_str(const std::string &DEndCompetitionPhase)
{
    m_DEndCompetitionPhase = DEndCompetitionPhase;
}

void CPfCompetitionPhasesBySeason::setDBeginCompetitionPhase(const CDate &DBeginCompetitionPhase)
{
    m_DBeginCompetitionPhase = DBeginCompetitionPhase.getTimestamp();
}

void CPfCompetitionPhasesBySeason::setDBeginCompetitionPhase_str(const std::string &DBeginCompetitionPhase)
{
    m_DBeginCompetitionPhase = DBeginCompetitionPhase;
}

void CPfCompetitionPhasesBySeason::setXFkSeason(int XFkSeason)
{
    std::ostringstream stream;
    stream << XFkSeason;
    m_XFkSeason = stream.str();
}

void CPfCompetitionPhasesBySeason::setXFkSeason_str(const std::string &XFkSeason)
{
    m_XFkSeason = XFkSeason;
}

