/******************************************************************************
* Copyright (C) 2009 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.23                                                         *
******************************************************************************/

#ifndef CPFSTRATEGICPOSITION_H_
#define CPFSTRATEGICPOSITION_H_

#include <string>

class CPfStrategicPosition
{
public:
    CPfStrategicPosition();
    CPfStrategicPosition(const CPfStrategicPosition &obj);
    virtual ~CPfStrategicPosition();

    int getNLineupOrder() const;
    const std::string& getNLineupOrder_str() const;
    int getXFkFormation() const;
    const std::string& getXFkFormation_str() const;
    int getNTopLeftArea() const;
    const std::string& getNTopLeftArea_str() const;
    int getXFkRole() const;
    const std::string& getXFkRole_str() const;
    int getNOffensivePosX() const;
    const std::string& getNOffensivePosX_str() const;
    int getNBottomRightArea() const;
    const std::string& getNBottomRightArea_str() const;
    int getNOffensivePosZ() const;
    const std::string& getNOffensivePosZ_str() const;
    int getXStrategicPosition() const;
    const std::string& getXStrategicPosition_str() const;
    int getNDefensivePosZ() const;
    const std::string& getNDefensivePosZ_str() const;
    int getNDefensivePosX() const;
    const std::string& getNDefensivePosX_str() const;
    int getNInitialPosZ() const;
    const std::string& getNInitialPosZ_str() const;
    int getNInitialPosX() const;
    const std::string& getNInitialPosX_str() const;

    void setNLineupOrder(int NLineupOrder);
    void setNLineupOrder_str(const std::string &NLineupOrder);
    void setXFkFormation(int XFkFormation);
    void setXFkFormation_str(const std::string &XFkFormation);
    void setNTopLeftArea(int NTopLeftArea);
    void setNTopLeftArea_str(const std::string &NTopLeftArea);
    void setXFkRole(int XFkRole);
    void setXFkRole_str(const std::string &XFkRole);
    void setNOffensivePosX(int NOffensivePosX);
    void setNOffensivePosX_str(const std::string &NOffensivePosX);
    void setNBottomRightArea(int NBottomRightArea);
    void setNBottomRightArea_str(const std::string &NBottomRightArea);
    void setNOffensivePosZ(int NOffensivePosZ);
    void setNOffensivePosZ_str(const std::string &NOffensivePosZ);
    void setXStrategicPosition(int XStrategicPosition);
    void setXStrategicPosition_str(const std::string &XStrategicPosition);
    void setNDefensivePosZ(int NDefensivePosZ);
    void setNDefensivePosZ_str(const std::string &NDefensivePosZ);
    void setNDefensivePosX(int NDefensivePosX);
    void setNDefensivePosX_str(const std::string &NDefensivePosX);
    void setNInitialPosZ(int NInitialPosZ);
    void setNInitialPosZ_str(const std::string &NInitialPosZ);
    void setNInitialPosX(int NInitialPosX);
    void setNInitialPosX_str(const std::string &NInitialPosX);

private:
    std::string m_NLineupOrder;
    std::string m_XFkFormation;
    std::string m_NTopLeftArea;
    std::string m_XFkRole;
    std::string m_NOffensivePosX;
    std::string m_NBottomRightArea;
    std::string m_NOffensivePosZ;
    std::string m_XStrategicPosition;
    std::string m_NDefensivePosZ;
    std::string m_NDefensivePosX;
    std::string m_NInitialPosZ;
    std::string m_NInitialPosX;

};
#endif /*CPFSTRATEGICPOSITION_H_*/
