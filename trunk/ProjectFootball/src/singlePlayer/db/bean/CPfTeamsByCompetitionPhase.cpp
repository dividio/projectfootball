/******************************************************************************
* Copyright (C) 2010 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.23                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>
#include <stdlib.h>

#include "CPfTeamsByCompetitionPhase.h"

CPfTeamsByCompetitionPhase::CPfTeamsByCompetitionPhase()
{
    m_XTeamByCompetitionPhase = "0";
    m_XFkCompetitionPhaseBySeason = "0";
    m_XFkTeam = "0";
}

CPfTeamsByCompetitionPhase::CPfTeamsByCompetitionPhase(const CPfTeamsByCompetitionPhase &obj)
{
    m_XTeamByCompetitionPhase = obj.m_XTeamByCompetitionPhase;
    m_XFkCompetitionPhaseBySeason = obj.m_XFkCompetitionPhaseBySeason;
    m_XFkTeam = obj.m_XFkTeam;
}

CPfTeamsByCompetitionPhase::~CPfTeamsByCompetitionPhase()
{
}

int CPfTeamsByCompetitionPhase::getXTeamByCompetitionPhase() const
{
    if( m_XTeamByCompetitionPhase=="" ){
        return 0;
    }else{
        return atoi(m_XTeamByCompetitionPhase.c_str());
    }
}

const std::string& CPfTeamsByCompetitionPhase::getXTeamByCompetitionPhase_str() const
{
    return m_XTeamByCompetitionPhase;
}

int CPfTeamsByCompetitionPhase::getXFkCompetitionPhaseBySeason() const
{
    if( m_XFkCompetitionPhaseBySeason=="" ){
        return 0;
    }else{
        return atoi(m_XFkCompetitionPhaseBySeason.c_str());
    }
}

const std::string& CPfTeamsByCompetitionPhase::getXFkCompetitionPhaseBySeason_str() const
{
    return m_XFkCompetitionPhaseBySeason;
}

int CPfTeamsByCompetitionPhase::getXFkTeam() const
{
    if( m_XFkTeam=="" ){
        return 0;
    }else{
        return atoi(m_XFkTeam.c_str());
    }
}

const std::string& CPfTeamsByCompetitionPhase::getXFkTeam_str() const
{
    return m_XFkTeam;
}

void CPfTeamsByCompetitionPhase::setXTeamByCompetitionPhase(int XTeamByCompetitionPhase)
{
    std::ostringstream stream;
    stream << XTeamByCompetitionPhase;
    m_XTeamByCompetitionPhase = stream.str();
}

void CPfTeamsByCompetitionPhase::setXTeamByCompetitionPhase_str(const std::string &XTeamByCompetitionPhase)
{
    m_XTeamByCompetitionPhase = XTeamByCompetitionPhase;
}

void CPfTeamsByCompetitionPhase::setXFkCompetitionPhaseBySeason(int XFkCompetitionPhaseBySeason)
{
    std::ostringstream stream;
    stream << XFkCompetitionPhaseBySeason;
    m_XFkCompetitionPhaseBySeason = stream.str();
}

void CPfTeamsByCompetitionPhase::setXFkCompetitionPhaseBySeason_str(const std::string &XFkCompetitionPhaseBySeason)
{
    m_XFkCompetitionPhaseBySeason = XFkCompetitionPhaseBySeason;
}

void CPfTeamsByCompetitionPhase::setXFkTeam(int XFkTeam)
{
    std::ostringstream stream;
    stream << XFkTeam;
    m_XFkTeam = stream.str();
}

void CPfTeamsByCompetitionPhase::setXFkTeam_str(const std::string &XFkTeam)
{
    m_XFkTeam = XFkTeam;
}

