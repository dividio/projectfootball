/******************************************************************************
* Copyright (C) 2008 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.20                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>
#include <stdlib.h>

#include "CPfTeamAverages.h"

CPfTeamAverages::CPfTeamAverages()
{
    m_NTotal = "0";
    m_XTeam = "0";
    m_NAttack = "0";
    m_NDefense = "0";
}

CPfTeamAverages::CPfTeamAverages(const CPfTeamAverages &obj)
{
    m_NTotal = obj.m_NTotal;
    m_XTeam = obj.m_XTeam;
    m_NAttack = obj.m_NAttack;
    m_NDefense = obj.m_NDefense;
}

CPfTeamAverages::~CPfTeamAverages()
{
}

int CPfTeamAverages::getNTotal() const
{
    if( m_NTotal=="" ){
        return 0;
    }else{
        return atoi(m_NTotal.c_str());
    }
}

const std::string& CPfTeamAverages::getNTotal_str() const
{
    return m_NTotal;
}

int CPfTeamAverages::getXTeam() const
{
    if( m_XTeam=="" ){
        return 0;
    }else{
        return atoi(m_XTeam.c_str());
    }
}

const std::string& CPfTeamAverages::getXTeam_str() const
{
    return m_XTeam;
}

int CPfTeamAverages::getNAttack() const
{
    if( m_NAttack=="" ){
        return 0;
    }else{
        return atoi(m_NAttack.c_str());
    }
}

const std::string& CPfTeamAverages::getNAttack_str() const
{
    return m_NAttack;
}

int CPfTeamAverages::getNDefense() const
{
    if( m_NDefense=="" ){
        return 0;
    }else{
        return atoi(m_NDefense.c_str());
    }
}

const std::string& CPfTeamAverages::getNDefense_str() const
{
    return m_NDefense;
}

void CPfTeamAverages::setNTotal(int NTotal)
{
    std::ostringstream stream;
    stream << NTotal;
    m_NTotal = stream.str();
}

void CPfTeamAverages::setNTotal_str(const std::string &NTotal)
{
    m_NTotal = NTotal;
}

void CPfTeamAverages::setXTeam(int XTeam)
{
    std::ostringstream stream;
    stream << XTeam;
    m_XTeam = stream.str();
}

void CPfTeamAverages::setXTeam_str(const std::string &XTeam)
{
    m_XTeam = XTeam;
}

void CPfTeamAverages::setNAttack(int NAttack)
{
    std::ostringstream stream;
    stream << NAttack;
    m_NAttack = stream.str();
}

void CPfTeamAverages::setNAttack_str(const std::string &NAttack)
{
    m_NAttack = NAttack;
}

void CPfTeamAverages::setNDefense(int NDefense)
{
    std::ostringstream stream;
    stream << NDefense;
    m_NDefense = stream.str();
}

void CPfTeamAverages::setNDefense_str(const std::string &NDefense)
{
    m_NDefense = NDefense;
}

