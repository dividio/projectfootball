/******************************************************************************
* Copyright (C) 2010 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.23                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>

#include "CPfCompetitionPhasesBySeasonDAOSQLite.h"

CPfCompetitionPhasesBySeasonDAOSQLite::CPfCompetitionPhasesBySeasonDAOSQLite(sqlite3 *database)
  : CPfCompetitionPhasesBySeasonDAOSQLiteEntity(database)
{
}

CPfCompetitionPhasesBySeasonDAOSQLite::~CPfCompetitionPhasesBySeasonDAOSQLite()
{
}

CPfCompetitionPhasesBySeason* CPfCompetitionPhasesBySeasonDAOSQLite::findByXFkCompetitionPhase(int XFkCompetitionPhase)
{
    std::ostringstream stream;
    stream << XFkCompetitionPhase;
    return findByXFkCompetitionPhase(stream.str());
}

CPfCompetitionPhasesBySeason* CPfCompetitionPhasesBySeasonDAOSQLite::findByXFkCompetitionPhase(const std::string &XFkCompetitionPhase)
{
    std::string sql("SELECT * FROM PF_COMPETITION_PHASES_BY_SEASON WHERE ");
    sql = sql+"X_FK_COMPETITION_PHASE='"+XFkCompetitionPhase+"'";
    return loadRegister(sql);
}

CPfCompetitionPhasesBySeason* CPfCompetitionPhasesBySeasonDAOSQLite::findByXCompetitionPhaseBySeason(int XCompetitionPhaseBySeason)
{
    std::ostringstream stream;
    stream << XCompetitionPhaseBySeason;
    return findByXCompetitionPhaseBySeason(stream.str());
}

CPfCompetitionPhasesBySeason* CPfCompetitionPhasesBySeasonDAOSQLite::findByXCompetitionPhaseBySeason(const std::string &XCompetitionPhaseBySeason)
{
    std::string sql("SELECT * FROM PF_COMPETITION_PHASES_BY_SEASON WHERE ");
    sql = sql+"X_COMPETITION_PHASE_BY_SEASON='"+XCompetitionPhaseBySeason+"'";
    return loadRegister(sql);
}

std::vector<CPfCompetitionPhasesBySeason*>* CPfCompetitionPhasesBySeasonDAOSQLite::findByXFkSeason(int XFkSeason)
{
    std::ostringstream stream;
    stream << XFkSeason;
    return findByXFkSeason(stream.str());
}

std::vector<CPfCompetitionPhasesBySeason*>* CPfCompetitionPhasesBySeasonDAOSQLite::findByXFkSeason(const std::string &XFkSeason)
{
    std::string sql("SELECT * FROM PF_COMPETITION_PHASES_BY_SEASON WHERE ");
    sql = sql+"X_FK_SEASON='"+XFkSeason+"'";
    return loadVector(sql);
}

CPfCompetitionPhasesBySeason* CPfCompetitionPhasesBySeasonDAOSQLite::findByXFkSeasonAndXTeam(int XFkSeason, int XTeam)
{
    std::ostringstream stream;
    stream << XFkSeason;
    std::ostringstream stream2;
    stream2 << XTeam;
    return findByXFkSeasonAndXTeam(stream.str(), stream2.str());
}

CPfCompetitionPhasesBySeason* CPfCompetitionPhasesBySeasonDAOSQLite::findByXFkSeasonAndXTeam(const std::string &XFkSeason, const std::string &XTeam)
{
    std::string sql(
            "SELECT CPS.* "
            "FROM PF_COMPETITION_PHASES_BY_SEASON CPS "
            "JOIN PF_TEAMS_BY_COMPETITION_PHASE TCP ON TCP.X_FK_COMPETITION_PHASE_BY_SEASON = CPS.X_COMPETITION_PHASE_BY_SEASON ");
    sql +=  "WHERE CPS.X_FK_SEASON='"+ XFkSeason +"' "
            "AND TCP.X_FK_TEAM='" + XTeam + "'";
    return loadRegister(sql);
}
