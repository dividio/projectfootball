/******************************************************************************
* Copyright (C) 2008 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.20                                                         *
******************************************************************************/

#include <iostream>
#include <sstream>

#include "CPfTeamsDAOSQLite.h"

CPfTeamsDAOSQLite::CPfTeamsDAOSQLite(sqlite3 *database)
  : CPfTeamsDAOSQLiteEntity(database)
{
}

CPfTeamsDAOSQLite::~CPfTeamsDAOSQLite()
{
}

CPfTeams* CPfTeamsDAOSQLite::findByXTeam(int XTeam)
{
    std::ostringstream stream;
    stream << XTeam;
    return findByXTeam(stream.str());
}

CPfTeams* CPfTeamsDAOSQLite::findByXTeam(const std::string &XTeam)
{
    std::string sql("SELECT * FROM PF_TEAMS WHERE ");
    sql = sql+"X_TEAM='"+XTeam+"'";
    return loadRegister(sql);
}

std::vector<CPfTeams*>* CPfTeamsDAOSQLite::findTeams()
{
    std::string sql("SELECT * FROM PF_TEAMS");
    return loadVector(sql);
}

std::vector<CPfTeams*>* CPfTeamsDAOSQLite::findTeamsByXCompetition(int XCompetition)
{
    std::ostringstream stream;
    stream << XCompetition;
    std::string sql("SELECT * FROM PF_TEAMS WHERE X_TEAM IN ");
    sql = sql + "(SELECT X_FK_TEAM FROM PF_REGISTERED_TEAMS WHERE X_FK_COMPETITION='"+stream.str()+"')";
    sql = sql + " ORDER BY S_TEAM";
    return loadVector(sql);
}

CPfTeams* CPfTeamsDAOSQLite::findPlayerTeam()
{
    std::string sql("SELECT * FROM PF_TEAMS WHERE X_TEAM=(SELECT S_VALUE FROM PF_GAME_STATES WHERE S_STATE='PLAYER_TEAM')");
    return loadRegister(sql);
}

CPfTeams* CPfTeamsDAOSQLite::findByXFkCountry(int XFkCountry)
{
    std::ostringstream stream;
    stream << XFkCountry;
    return findByXFkCountry(stream.str());
}

CPfTeams* CPfTeamsDAOSQLite::findByXFkCountry(const std::string &XFkCountry)
{
    std::string sql("SELECT * FROM PF_TEAMS WHERE ");
    sql = sql+"X_FK_COUNTRY='"+XFkCountry+"'";
    return loadRegister(sql);
}
