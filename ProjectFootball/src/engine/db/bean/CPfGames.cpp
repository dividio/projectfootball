/******************************************************************************
* Copyright (C) 2008 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.6                                                          *
******************************************************************************/

#include <iostream>
#include <sstream>

#include "CPfGames.h"

CPfGames::CPfGames()
{
    m_XFkUser = "0";
    m_SConnectionString = "";
    m_XGame = "0";
    m_SDriverName = "";
    m_SGameName = "";
}

CPfGames::~CPfGames()
{
}

int CPfGames::getXFkUser_int()
{
    return atoi(m_XFkUser.c_str());
}

const std::string& CPfGames::getXFkUser()
{
    return m_XFkUser;
}

const std::string& CPfGames::getSConnectionString()
{
    return m_SConnectionString;
}

int CPfGames::getXGame_int()
{
    return atoi(m_XGame.c_str());
}

const std::string& CPfGames::getXGame()
{
    return m_XGame;
}

const std::string& CPfGames::getSDriverName()
{
    return m_SDriverName;
}

const std::string& CPfGames::getSGameName()
{
    return m_SGameName;
}

void CPfGames::setXFkUser(int XFkUser)
{
    std::ostringstream stream;
    stream << XFkUser;
    m_XFkUser = stream.str();
}

void CPfGames::setXFkUser(const std::string &XFkUser)
{
    m_XFkUser = XFkUser;
}

void CPfGames::setSConnectionString(const std::string &SConnectionString)
{
    m_SConnectionString = SConnectionString;
}

void CPfGames::setXGame(int XGame)
{
    std::ostringstream stream;
    stream << XGame;
    m_XGame = stream.str();
}

void CPfGames::setXGame(const std::string &XGame)
{
    m_XGame = XGame;
}

void CPfGames::setSDriverName(const std::string &SDriverName)
{
    m_SDriverName = SDriverName;
}

void CPfGames::setSGameName(const std::string &SGameName)
{
    m_SGameName = SGameName;
}

