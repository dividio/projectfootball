/******************************************************************************
* Copyright (C) 2007 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.2                                                          *
******************************************************************************/


#include <sqlite3.h>

#include "CDAOFactorySqlite.h"
#include "../utils/CLog.h"
#include "CPfEquiposDAOSqlite.h"



CDAOFactorySqlite::CDAOFactorySqlite(std::string file)
{
    const char *fileDB = file.c_str();
    CLog::getInstance()->info("Path: %s", file.c_str());
    if (sqlite3_open(fileDB, &m_dataBase) != SQLITE_OK) {
        sqlite3_close(m_dataBase);
        m_dataBase = NULL;
        CLog::getInstance()->exception("Can't open database file: \"%s\" --> \"%s\"", file.c_str(), sqlite3_errmsg(m_dataBase));
    }
    initDAOs();

    CLog::getInstance()->info("Database manager initialized: <-- \"%s\"", file.c_str());
}


CDAOFactorySqlite::~CDAOFactorySqlite()
{
    delete m_PfEquiposDAO;
}


void CDAOFactorySqlite::initDAOs()
{
    m_PfEquiposDAO = new CPfEquiposDAOSqlite(m_dataBase);
}


IPfEquiposDAO* CDAOFactorySqlite::getIPfEquiposDAO()
{
    return m_PfEquiposDAO;
}

