/******************************************************************************
* Copyright (C) 2007 - Ikaro Games   www.ikarogames.com                       *
*                                                                             *
* This program is free software; you can redistribute it and/or               *
* modify it under the terms of the GNU General Public License                 *
* as published by the Free Software Foundation; either version 2              *
* of the License, or (at your option) any later version.                      *
*                                                                             *
* This program is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of              *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
* GNU General Public License for more details.                                *
*                                                                             *
* You should have received a copy of the GNU General Public License           *
* along with this program; if not, write to the Free Software                 *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. *
*                                                                             *
*                                                                             *
*       generated by dia/DAOcodegen.py                                        *
*       Version: 1.0                                                          *
******************************************************************************/


#include <string>

#include "CPfSavedGames.h"

CPfSavedGames::CPfSavedGames()
{
    m_SUser = new std::string("");
    m_SConnectionString = new std::string("");
    m_SSavedGame = new std::string("");
    m_XSavedGame = new std::string("");
    m_SDriver = new std::string("");
}

CPfSavedGames::CPfSavedGames(string SUser, string SConnectionString, 
        string SSavedGame, string XSavedGame, 
        string SDriver)
{
    m_SUser = new std::string(SUser);
    m_SConnectionString = new std::string(SConnectionString);
    m_SSavedGame = new std::string(SSavedGame);
    m_XSavedGame = new std::string(XSavedGame);
    m_SDriver = new std::string(SDriver);
}

CPfSavedGames::~CPfSavedGames()
{
    delete m_SUser;
    delete m_SConnectionString;
    delete m_SSavedGame;
    delete m_XSavedGame;
    delete m_SDriver;
}

void CPfSavedGames::setSUser(string SUser)
{
    delete m_SUser;
    m_SUser = new string(SUser);
}

void CPfSavedGames::setSConnectionString(string SConnectionString)
{
    delete m_SConnectionString;
    m_SConnectionString = new string(SConnectionString);
}

void CPfSavedGames::setSSavedGame(string SSavedGame)
{
    delete m_SSavedGame;
    m_SSavedGame = new string(SSavedGame);
}

void CPfSavedGames::setXSavedGame(string XSavedGame)
{
    delete m_XSavedGame;
    m_XSavedGame = new string(XSavedGame);
}

void CPfSavedGames::setSDriver(string SDriver)
{
    delete m_SDriver;
    m_SDriver = new string(SDriver);
}

const string* CPfSavedGames::getSUser()
{
    return m_SUser;
}

const string* CPfSavedGames::getSConnectionString()
{
    return m_SConnectionString;
}

const string* CPfSavedGames::getSSavedGame()
{
    return m_SSavedGame;
}

const string* CPfSavedGames::getXSavedGame()
{
    return m_XSavedGame;
}

const string* CPfSavedGames::getSDriver()
{
    return m_SDriver;
}

